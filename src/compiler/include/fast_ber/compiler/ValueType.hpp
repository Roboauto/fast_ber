#pragma once

#include "fast_ber/compiler/CompilerTypes.hpp"

std::string value_type(const AnyType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const BitStringType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const BooleanType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const CharacterStringType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const ChoiceType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const DateType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const DateTimeType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const DurationType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const EmbeddedPDVType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const EnumeratedType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const ExternalType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const GeneralizedTimeType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const InstanceOfType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const IntegerType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const IRIType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const NullType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const ObjectClassFieldType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const ObjectDescriptorType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const ObjectIdentifierType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const OctetStringType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const RealType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const RelativeIRIType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const RelativeOIDType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const SequenceType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const SequenceOfType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const SetType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const SetOfType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const PrefixedType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const TimeType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const TimeOfDayType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const UTCTimeType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const DefinedType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const BuiltinType&, const Module&, const Asn1Tree&, const std::string& = {},
                       const std::string& = {});
std::string value_type(const Type&, const Module&, const Asn1Tree&, const std::string& = {}, const std::string& = {});
